#
# 20nics
#
{
    use esmith::NetworksDB;
    my $ndb = esmith::NetworksDB->open_ro();
    my $mac_validation = $firewall{'MACValidation'} || 'disabled';
    my $mac_validation_policy = $firewall{'MACValidationPolicy'} || 'accept';
    my $mac_option = '';
    if ($mac_validation eq 'enabled') {
        $mac_option = ',maclist';
        if ($mac_validation_policy eq 'drop') {
            $mac_option .= ',dhcp';
        }
    }

    if (!defined($ndb->red)) {
        foreach my $i ($ndb->green) {
            my $role = $i->prop('role') || next;
            my $type = $i->prop('type') || '';
            next if ($role eq 'slave' || $role eq 'bridged' || $role eq 'pppoe');
            next if ($type eq 'alias');
            if ($role eq 'green') {
                $OUT .= "# Force GREEN + RED mode with only one interface\n";
                $OUT .= "net\t".$i->key."\tdhcp,nosmurfs,optional";
            }
            $OUT .= ",bridge" if ($type eq 'bridge');
            $OUT .= "\n";
        }
    } else {
        foreach my $i ($ndb->interfaces) {
            my $role = $i->prop('role') || next;
            my $type = $i->prop('type') || '';
            next if ($role eq 'slave' || $role eq 'bridged' || $role eq 'pppoe');
            next if ($type eq 'alias');
            if ($role eq 'green') {
                $OUT .= "loc\t".$i->key."\tnosmurfs,routeback".$mac_option;
            } elsif ($role eq 'red') {
                $OUT.="net\t".$i->key."\tdhcp,nosmurfs,optional";
            } else {
                $role = substr($role,0,5); #truncate zone name to 5 chars
                if ($role eq 'blue') {
                    $OUT.="$role\t".$i->key."\tdhcp,nosmurfs,routeback".$mac_option;
                } else {
                    $OUT.="$role\t".$i->key."\tdhcp,nosmurfs,routeback";
                }
            }
            $OUT .= ",bridge" if ($type eq 'bridge');
            $OUT .= "\n";
        } 
    }
}
